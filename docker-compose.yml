services:
  postgres:
    container_name: sd-db
    image: postgres:14
    restart: always
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /var/lib/sdpostgresql/data/pgdata
    volumes:
      - ./tmp/pgdata:/var/lib/sdpostgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - back_sd

  server:
    container_name: sd-server
    image: sd-server
    build:
      context: .
      dockerfile: Dockerfile.server
      args:
        SERVER_PORT: ${SERVER_PORT}
    restart: always
    ports:
      - '${SERVER_PORT}:${SERVER_PORT}'
    environment:
      CLIENT_PORT: ${CLIENT_PORT}
      SERVER_PORT: ${SERVER_PORT}
      SERVER_HOST: ${SERVER_HOST}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_PORT: ${PGADMIN_LISTEN_PORT}
      SECRET_KEY: ${SECRET_KEY}
      FILE_PATH: ${FILE_PATH}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
    depends_on:
      - postgres
    volumes:
      - ./packages/server/SDFiles:/${FILE_PATH}
    networks:
      - back_sd

  pgadmin:
    container_name: sd-pgadmin
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_PORT: 5060
    ports:
      - '5060:5060'
    volumes:
      - ./tmp/sdpgadmin:/tmp/sdpgadmin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - back_sd

  nginx:
    container_name: sd-nginx
    image: nginx:latest
    restart: always
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./etc/letsencrypt:/etc/letsencrypt
    depends_on:
      - server
      - pgadmin
    networks:
      - back_sd

volumes:
  sdpgadmin:
  sdpostgresql:
  SDFiles:

networks:
  back_sd:
    driver: bridge
